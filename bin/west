#!/bin/bash

# If $WEST_ROOT is not set, then set it based on the path to this script
if [ -z "$WEST_ROOT" ]; then
    export WEST_ROOT=$(readlink -f $(dirname $0)/..)
fi

# In the absence of other information, use whatever Python v2.7 is on the path
if [ -z "$WEST_PYTHON" ]; then
    export WEST_PYTHON=python2.7
fi

PATH_AFFIX="$WEST_ROOT/lib/blessings:$WEST_ROOT/lib/h5py:$WEST_ROOT/lib/wwmgr:$WEST_ROOT/src:$WEST_ROOT/lib/west_tools"
if [ -z "$WEST_PYTHONPATH" ]; then
    export WEST_PYTHONPATH="$PATH_AFFIX"
else
    export WEST_PYTHONPATH="$WEST_PYTHONPATH:$PATH_AFFIX"
fi

if [ -z "$WEST_KERNPROF" ]; then
    WEST_KERNPROF=kernprof.py
fi

# Make sure the WEST Python package can be found, and do a quick and dirty 
# check to (try to) avoid duplicating something that's already on $PYTHONPATH
if echo "$PYTHONPATH" | grep -v "$WEST_PYTHONPATH" &> /dev/null; then
    if [ -z "$PYTHONPATH" ] ; then
        export PYTHONPATH="$WEST_PYTHONPATH"
    else
        export PYTHONPATH="$WEST_PYTHONPATH:$PYTHONPATH"
    fi
fi  

# Take the name of the script to execute from the name by which this process
# is called (i.e. appropriately-named symlinks to this script work).
SCRIPT=$(basename $0)

# Show developer-oriented warnings by default, as these may be important to
# users (e.g. DeprecationWarnings in system or analysis files, etc.)
if [ -z "$PYTHONWARNINGS" ] ; then
    export PYTHONWARNINGS="d"
else
    export PYTHONWARNINGS="$PYTHONWARNINGS,d"
fi

# Find where the requested script is stashed
if [ "$SCRIPT" == "west" ] ; then
    FULLSCRIPT=""
elif [ -e "$WEST_ROOT/lib/west_tools/${SCRIPT}.py" ] ; then
    FULLSCRIPT="$WEST_ROOT/lib/west_tools/${SCRIPT}.py"
elif [ -e "$WEST_ROOT/lib/cmds/${SCRIPT}.py" ] ; then
    FULLSCRIPT="$WEST_ROOT/lib/cmds/${SCRIPT}.py"
else
    echo "script ${SCRIPT}.py not found"
    exit 1
fi

if [ "$1" == "--profile" ]; then
    shift
    pfile=west_profile_$$.dat
    echo >&2 "Saving profiling information to $pfile"
    $WEST_PYTHON -m cProfile -o $pfile $FULLSCRIPT "$@"
    $WEST_PYTHON -c "import sys, pstats; ps = pstats.Stats('$pfile', stream=sys.stderr); ps.sort_stats('time').print_stats(100);"
elif [ "$1" == "--lprofile" ]; then
    shift
    pfile=west_lprofile_$$.dat
    echo >&2 "Saving line_profiler information to $pfile"
    $WEST_KERNPROF -l -o $pfile -v $FULLSCRIPT "$@"
elif [ "$1" == "--strace" ]; then
    shift
    echo >&2 "Running $SCRIPT under strace"
    strace $WEST_PYTHON $FULLSCRIPT "$@"
else
    exec $WEST_PYTHON $FULLSCRIPT "$@"
fi
